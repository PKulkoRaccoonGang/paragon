{"version":3,"file":"component---src-pages-insights-jsx-4ac12a38ca7c25b60f2b.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/config.js","webpack://paragon-pattern-library-documentation/./src/components/insights/SummaryUsageExamples.jsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ProjectUsageExamples.jsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ComponentUsageExamples.jsx","webpack://paragon-pattern-library-documentation/./src/utils/getGithubProjectUrl.js","webpack://paragon-pattern-library-documentation/./src/pages/insights.jsx"],"sourcesContent":["// import hasFeatureFlagEnabled from './utils/hasFeatureFlagEnabled';\n\n// export const EXAMPLE_FEATURE = 'EXAMPLE_FEATURE';\n\n// Feature flags used throughout the site should be configured here.\n// You should generally allow two ways of enabling a feature flag:\n// 1. Through environment variables which will enable a feature flag at build time\n//    without a way of disabling it, to do so during local development edit the\n//    .env.development file located at the root of docs site project (note that\n//    you will need to restart development server for the changes to take effect).\n//    See DIRECTION_SWITCHER feature for example of configuring feature flags this way.\n// 2. As a query parameter in the URL, using hasFeatureFlagEnabled util function.\n//    This will allow to enable feature flag by providing its name as a feature?\n//    query parameter in the URL. (e.g. to enable DIRECTION_SWITCHER feature you would append\n//    '?feature=DIRECTION_SWITCHER' to the URL)\n\n// export const FEATURES = {\n//   EXAMPLE_FEATURE: process.env.EXAMPLE_FEATURE || hasFeatureFlagEnabled(EXAMPLE_FEATURE),\n// };\n\nconst INSIGHTS_TABS = Object.freeze({\n  SUMMARY: 'Summary',\n  PROJECTS: 'Projects',\n  COMPONENTS: 'Components',\n});\n\nconst INSIGHTS_PAGES = [\n  {\n    tab: INSIGHTS_TABS.SUMMARY,\n    path: '/insights',\n  },\n  {\n    tab: INSIGHTS_TABS.PROJECTS,\n    path: '/insights/projects',\n  },\n  {\n    tab: INSIGHTS_TABS.COMPONENTS,\n    path: '/insights/components',\n  },\n];\n\nmodule.exports = {\n  INSIGHTS_TABS,\n  INSIGHTS_PAGES,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '~paragon-react';\n\nconst SummaryUsageExamples = ({ row }) => {\n  const componentUsages = row.original.usages;\n  return componentUsages.map(({\n    name: projectName,\n    usages: projectUsages,\n    repositoryUrl,\n  }) => (\n    <div className=\"pgn-doc__summary-usages__project mb-4\" key={projectName}>\n      <h5 className=\"font-weight-bold\">{projectName}</h5>\n      <ul className=\"list-unstyled\">\n        {projectUsages.map(({\n          filePath,\n          line,\n        }) => (\n          <li key={`${filePath}L#${line}`}>\n            {repositoryUrl ? (\n              <>\n                <Hyperlink\n                  destination={`${repositoryUrl}/${filePath}#L${line}`}\n                  target=\"_blank\"\n                >\n                  {filePath}\n                </Hyperlink>\n                {' '}(line {line})\n              </>\n            ) : (\n              <>{filePath} (line {line})</>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  ));\n};\n\nSummaryUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default SummaryUsageExamples;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '~paragon-react';\n\nconst ProjectUsageExamples = ({ row }) => {\n  const componentUsages = row.original.usages;\n  const repositoryUrl = row.original.repositoryUrl;\n  return (\n    <>\n      {Object.keys(componentUsages).length === 0 && (\n        <p>This project does not import any Paragon components, but may still use its SCSS styles.</p>\n      )}\n      {Object.entries(componentUsages).map(([componentName, componentUsages]) => (\n        <div className=\"pgn-doc__usages-modal mb-4\" key={componentName}>\n          <h5 className=\"font-weight-bold\">{componentName}</h5>\n          <ul className=\"list-unstyled\">\n            {componentUsages.map(({\n              filePath,\n              line,\n            }) => (\n              <li key={`${filePath}L#${line}`}>\n                {repositoryUrl ? (\n                  <>\n                    <Hyperlink\n                      destination={`${repositoryUrl}/${filePath}#L${line}`}\n                      target=\"_blank\"\n                    >\n                      {filePath}\n                    </Hyperlink>\n                    {' '}(line {line})\n                  </>\n                ) : (\n                  <>{filePath} (line {line})</>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </>\n  );\n};\n\nProjectUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProjectUsageExamples;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '~paragon-react';\n\nconst ComponentUsageExamples = ({ row }) => {\n  const repositoryUrl = row.original.repositoryUrl;\n  const projectUsages = row.original.usages;\n  return (\n  <div className=\"pgn-doc__component-usage__project\">\n      <ul className=\"list-unstyled\">\n        {projectUsages.map(({\n          filePath,\n          line,\n        }) => (\n          <li key={`${filePath}#L${line}`}>\n            {repositoryUrl ? (\n              <>\n                <Hyperlink\n                  destination={`${repositoryUrl}/${filePath}#L${line}`}\n                  target=\"_blank\"\n                >\n                  {filePath}\n                </Hyperlink>\n                {' '}(line {line})\n              </>\n            ) : (\n              <>{filePath} (line {line})</>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nComponentUsageExamples.propTypes = {\n  componentName: PropTypes.string.isRequired,\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ComponentUsageExamples;\n","const getGithubProjectUrl = (repository) => {\n  let repositoryUrl;\n  if (repository === Object(repository) && repository.url) {\n    repositoryUrl = repository.url;\n  } else if (typeof repository === 'string') {\n    repositoryUrl = repository;\n  } else {\n    // unsupported repository field\n    return;\n  }\n  const parts = repositoryUrl.split('/');\n  const githubDomainIndex = parts.findIndex(part => part === 'github.com');\n  parts.splice(0, githubDomainIndex);\n  const parsedRepositoryUrl = parts.join('/').replace('.git', '');\n  return `https://${parsedRepositoryUrl}/blob/master`;\n};\n\nexport default getGithubProjectUrl;\n","import React from 'react';\nimport { navigate } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  DataTable,\n  Tabs,\n  Tab,\n  Container,\n} from '~paragon-react'; // eslint-disable-line\nimport SEO from '../components/SEO';\nimport Layout from '../components/PageLayout';\nimport SummaryUsageExamples from '../components/insights/SummaryUsageExamples';\nimport ProjectUsageExamples from '../components/insights/ProjectUsageExamples';\nimport ComponentUsageExamples from '../components/insights/ComponentUsageExamples';\nimport getGithubProjectUrl from '../utils/getGithubProjectUrl';\nimport dependentProjectsAnalysis from '../../../dependent-usage.json';\nimport { INSIGHTS_TABS, INSIGHTS_PAGES } from '../config';\n\nconst {\n  lastModified: analysisLastUpdated,\n  projectUsages: dependentProjectsUsages,\n} = dependentProjectsAnalysis;\n\nconst dependentProjects = dependentProjectsUsages.map(dependentUsage => ({\n  ...dependentUsage,\n  repositoryUrl: getGithubProjectUrl(dependentUsage.repository),\n  count: Object.values(dependentUsage.usages).reduce((accumulator, usage) => accumulator += usage.length, 0),\n}));\n\nconst componentsUsage = dependentProjectsUsages.reduce((accumulator, project) => {\n  Object.keys(project.usages).forEach(componentName => {\n    if (!accumulator[componentName]) {\n      accumulator[componentName] = [];\n    }\n    accumulator[componentName] = accumulator[componentName].concat({\n      name: project.name,\n      folderName: project.folderName,\n      version: project.version,\n      repositoryUrl: getGithubProjectUrl(project.repository),\n      componentUsageCount: project.usages[componentName].length,\n      usages: project.usages[componentName],\n    });\n  });\n  return accumulator;\n}, {});\n\nconst summaryComponentsUsage = Object.entries(componentsUsage).map(([componentName, usages]) => {\n  const componentUsageCounts = usages.reduce((accumulator, project) => accumulator += project.componentUsageCount, 0);\n  return {\n    name: componentName,\n    count: componentUsageCounts,\n    usages: componentsUsage[componentName],\n  };\n});\n\nconst SummaryUsage = () => {\n  const summaryTableData = summaryComponentsUsage.sort((a, b) => {\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n    return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\n  });\n  const round = (n) => Math.round(n * 10) / 10;\n  const averageComponentsUsedPerProject = dependentProjects.reduce((accumulator, project) => accumulator += project.count, 0) / dependentProjects.length;\n  return (\n    <div className=\"pt-5 mb-5\">\n      <div className=\"mb-5\">\n        <h2>Overview</h2>\n        <p>\n          Paragon is used by at least <strong>{dependentProjects.length} projects</strong>, with an average\n          of <strong>{round(averageComponentsUsedPerProject)} component instances</strong> per project.\n        </p>\n      </div>\n      <h3>Overall component usage</h3>\n      <DataTable\n        isExpandable\n        isSortable\n        itemCount={summaryTableData.length}\n        data={summaryTableData}\n        renderRowSubComponent={({ row }) => <SummaryUsageExamples row={row} />}\n        columns={[\n          {\n            id: 'expander',\n            Header: DataTable.ExpandAll,\n            Cell: DataTable.ExpandRow,\n          },\n          {\n            Header: 'Component Name',\n            accessor: 'name',\n          },\n          { Header: 'Instance Count', accessor: 'count' },\n        ]}\n      >\n        <DataTable.TableControlBar />\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No summary available\" />\n        <DataTable.TableFooter />\n      </DataTable>\n    </div>\n  );\n};\n\n// Paragon version in all projects\nconst ProjectsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    <h3 className=\"mb-4\">Projects in Open edX consuming Paragon</h3>\n    <DataTable\n      isExpandable\n      isSortable\n      itemCount={dependentProjects.length}\n      data={dependentProjects}\n      renderRowSubComponent={({ row }) => <ProjectUsageExamples row={row} />}\n      columns={[\n        {\n          id: 'expander',\n          Header: DataTable.ExpandAll,\n          Cell: DataTable.ExpandRow,\n        },\n        {\n          Header: 'Project Name',\n          accessor: 'folderName',\n        },\n        { Header: 'Paragon Version', accessor: 'version' },\n        { Header: 'Instance Count', accessor: 'count' },\n      ]}\n    >\n      <DataTable.TableControlBar />\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No projects\" />\n      <DataTable.TableFooter />\n    </DataTable>\n  </div>\n);\n\n// Usage info about a single component\nconst ComponentUsage = ({ name, componentUsageInProjects }) => (\n  <div className=\"mb-5\">\n    <h3 className=\"mb-4\">{name}</h3>\n    <DataTable\n      isExpandable\n      isSortable\n      itemCount={componentUsageInProjects.length} // eslint-disable-line\n      data={componentUsageInProjects}\n      renderRowSubComponent={({ row }) => <ComponentUsageExamples row={row} />}\n      columns={[\n        {\n          id: 'expander',\n          Header: DataTable.ExpandAll,\n          Cell: DataTable.ExpandRow,\n        },\n        {\n          Header: 'Project Name',\n          accessor: 'folderName',\n        },\n        { Header: 'Paragon Version', accessor: 'version' },\n        { Header: 'Instance Count', accessor: 'componentUsageCount' },\n      ]}\n    >\n      <DataTable.Table />\n      <DataTable.EmptyTable content=\"No usages\" />\n    </DataTable>\n  </div>\n);\n\n// Usage info for all components\nconst ComponentsUsage = () => (\n  <div className=\"pt-5 mb-5\">\n    {Object.keys(componentsUsage).sort().map(name => (\n      <ComponentUsage\n        key={name}\n        name={name}\n        componentUsageInProjects={componentsUsage[name]}\n      />\n    ))}\n  </div>\n);\n\nexport default function InsightsPage({ pageContext: { tab } }) {\n  const handleOnSelect = (value) => {\n    if (value !== tab) {\n      global.analytics.track('Usage Insights', { tab: value });\n      navigate(INSIGHTS_PAGES.find(item => item.tab === value).path);\n    }\n  };\n\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Usage Insights\" />\n        <header className=\"mb-5\">\n          <h1>Usage Insights</h1>\n          <p>Last updated: {new Date(analysisLastUpdated).toLocaleDateString()}</p>\n        </header>\n        <Tabs\n          activeKey={tab}\n          id=\"uncontrolled-tab-example\"\n          onSelect={handleOnSelect}\n        >\n          <Tab eventKey={INSIGHTS_TABS.SUMMARY} title=\"Summary\">\n            <SummaryUsage />\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.PROJECTS} title=\"Projects\">\n            <ProjectsUsage />\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.COMPONENTS} title=\"Components\">\n            <ComponentsUsage />\n          </Tab>\n        </Tabs>\n      </Container>\n    </Layout>\n  );\n}\n\nInsightsPage.propTypes = {\n  pageContext: PropTypes.shape({\n    tab: PropTypes.oneOf(Object.values(INSIGHTS_TABS)),\n  }).isRequired,\n};\n"],"names":["INSIGHTS_TABS","Object","freeze","SUMMARY","PROJECTS","COMPONENTS","INSIGHTS_PAGES","tab","path","module","exports","row","original","usages","map","projectName","name","projectUsages","repositoryUrl","className","key","filePath","line","Hyperlink","destination","target","componentUsages","keys","length","entries","componentName","repository","url","parts","split","githubDomainIndex","findIndex","part","splice","join","replace","analysisLastUpdated","dependentProjectsAnalysis","dependentProjectsUsages","dependentProjects","dependentUsage","getGithubProjectUrl","count","values","reduce","accumulator","usage","componentsUsage","project","forEach","concat","folderName","version","componentUsageCount","summaryComponentsUsage","SummaryUsage","n","summaryTableData","sort","a","b","nameA","toUpperCase","nameB","averageComponentsUsedPerProject","Math","round","DataTable","isExpandable","isSortable","itemCount","data","renderRowSubComponent","columns","id","Header","Cell","accessor","content","ProjectsUsage","ComponentUsage","componentUsageInProjects","ComponentsUsage","InsightsPage","pageContext","Container","size","SEO","title","Date","toLocaleDateString","Tabs","activeKey","onSelect","value","global","analytics","track","navigate","item","Tab","eventKey"],"sourceRoot":""}