{"version":3,"file":"component---src-templates-component-page-template-jsx-c7a147380b893d2ed3ae.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/construct.js","webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://paragon-pattern-library-documentation/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://paragon-pattern-library-documentation/./node_modules/gatsby-plugin-mdx/index.js","webpack://paragon-pattern-library-documentation/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://paragon-pattern-library-documentation/./src/components/LinkedHeading.jsx","webpack://paragon-pattern-library-documentation/./src/components/PropType.jsx","webpack://paragon-pattern-library-documentation/./src/components/PropsTable.jsx","webpack://paragon-pattern-library-documentation/./src/templates/component-page-template.jsx"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LinkedHeading = ({\n  h,\n  children,\n  id,\n}) => {\n  const H = `h${h}`;\n\n  return (\n    <H id={id} className=\"pgn-doc__heading\">\n      {children}\n    </H>\n  );\n};\n\nLinkedHeading.propTypes = {\n  h: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nLinkedHeading.defaultProps = {\n};\n\nexport default LinkedHeading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from '~paragon-react'; // eslint-disable-line\n\nconst RequiredBadge = ({ isRequired }) => {\n  if (!isRequired) { return null; }\n  return (\n    <>\n      {' '}\n      <Badge variant=\"light\">Required</Badge>\n    </>\n  );\n};\n\nRequiredBadge.propTypes = {\n  isRequired: PropTypes.bool,\n};\n\nRequiredBadge.defaultProps = {\n  isRequired: false,\n};\n\nconst SimplePropType = ({ name, isRequired }) => (\n  <span>\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nSimplePropType.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n};\n\nSimplePropType.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeEnum = ({ name, value: enumValue, isRequired }) => (\n  <span>\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n    <span className=\"text-monospace small ml-2\">\n      {enumValue.map\n        ? enumValue.map(({ value }) => value).join(' | ')\n        : JSON.stringify(enumValue)}\n    </span>\n  </span>\n);\n\nPropTypeEnum.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeEnum.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeUnion = ({ value, isRequired }) => (\n  <span>\n    {value\n      .map(propType => <PropType key={propType.name} {...propType} />)\n      .reduce((prev, curr) => [prev, ' | ', curr])}\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeUnion.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nPropTypeUnion.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeInstanceOf = ({ value, isRequired }) => (\n  <span>\n    <code>{value}</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeInstanceOf.propTypes = {\n  isRequired: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n};\n\nPropTypeInstanceOf.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeArrayOf = ({ value, isRequired }) => (\n  <span>\n    <PropType {...value} />\n    <code>[]</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeArrayOf.propTypes = {\n  isRequired: PropTypes.bool,\n  value: PropTypes.shape({}).isRequired,\n};\n\nPropTypeArrayOf.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeObjectOf = ({ value, isRequired }) => (\n  <span>\n    <code>\n      Object.{'<'}\n      <PropType {...value} />\n      {'>'}\n    </code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nPropTypeObjectOf.propTypes = {\n  isRequired: PropTypes.bool,\n  value: PropTypes.shape({}).isRequired,\n};\n\nPropTypeObjectOf.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeShape = ({ name, value, isRequired }) => (\n  <span className=\"small\">\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n    {' {'}\n    {Object.entries(value).map(([key, propType]) => (\n      <div className=\"text-monospace pl-3\" key={key}>\n        {key}: <PropType {...propType} />,\n      </div>\n    ))}\n    {'}'}\n  </span>\n);\n\nPropTypeShape.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.shape({}).isRequired,\n};\n\nPropTypeShape.defaultProps = {\n  isRequired: false,\n};\n\nconst PropTypeExact = ({ name, value, isRequired }) => (\n  <span className=\"small\">\n    <code>{name}</code>\n    <RequiredBadge isRequired={isRequired} />\n    {' {'}\n    {Object.entries(value).map(([key, propType]) => (\n      <div className=\"text-monospace pl-3\">\n        {key}: <PropType {...propType} />,\n      </div>\n    ))}\n    {'}'}\n  </span>\n);\n\nPropTypeExact.propTypes = {\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.shape({}).isRequired,\n};\n\nPropTypeExact.defaultProps = {\n  isRequired: false,\n};\n\nconst CustomPropType = ({ raw, isRequired }) => (\n  <span>\n    <code>{raw}</code>\n    <RequiredBadge isRequired={isRequired} />\n  </span>\n);\n\nCustomPropType.propTypes = {\n  isRequired: PropTypes.bool,\n  raw: PropTypes.string,\n};\n\nCustomPropType.defaultProps = {\n  isRequired: false,\n  raw: '',\n};\n\nconst PROP_TYPE_COMPONENTS = {\n  array: SimplePropType,\n  bool: SimplePropType,\n  func: SimplePropType,\n  number: SimplePropType,\n  object: SimplePropType,\n  string: SimplePropType,\n  any: SimplePropType,\n  element: SimplePropType,\n  node: SimplePropType,\n  symbol: SimplePropType,\n  elementType: SimplePropType,\n  enum: PropTypeEnum,\n  union: PropTypeUnion,\n  instanceOf: PropTypeInstanceOf,\n  arrayOf: PropTypeArrayOf,\n  objectOf: PropTypeObjectOf,\n  shape: PropTypeShape,\n  exact: PropTypeExact,\n  custom: CustomPropType,\n};\n\nconst PropType = ({\n  name, value, required, raw,\n}) => {\n  const PropTypeComponent = PROP_TYPE_COMPONENTS[name];\n\n  if (PropTypeComponent) {\n    return (\n      <PropTypeComponent\n        value={value}\n        name={name}\n        isRequired={required}\n        raw={raw}\n      />\n    );\n  }\n\n  return 'unknown type';\n};\n\nPropType.propTypes = {\n  name: PropTypes.oneOf([\n    'arrayOf',\n    'custom',\n    'enum',\n    'array',\n    'bool',\n    'func',\n    'number',\n    'object',\n    'string',\n    'any',\n    'element',\n    'node',\n    'symbol',\n    'objectOf',\n    'shape',\n    'exact',\n    'union',\n    'elementType',\n  ]),\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  raw: PropTypes.string,\n  computed: PropTypes.bool,\n  required: PropTypes.bool,\n};\n\nexport default PropType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport PropType from './PropType';\nimport { Badge, Card } from '~paragon-react'; // eslint-disable-line\n\nconst DefaultValue = ({ value }) => {\n  if (!value || value === 'undefined') { return null; }\n  return (\n    <>\n      <Badge variant=\"light\">Default</Badge>\n      <span className=\"small text-monospace ml-2\">{value}</span>\n    </>\n  );\n};\n\nDefaultValue.propTypes = {\n  value: PropTypes.string,\n};\n\nDefaultValue.defaultProps = {\n  value: undefined,\n};\n\nconst Prop = ({\n  name, type, required, defaultValue, description,\n}) => (\n  <li className=\"px-4 border-top border-light-300\">\n    <div className=\"my-3\">\n      <div className=\"mb-2\">\n        <h5 className=\"d-inline mb-0 mr-1\">{`${name} `}</h5>\n        <PropType {...type} />\n        {required && (\n          <>\n            {' '}\n            <Badge variant=\"light\">Required</Badge>\n          </>\n        )}\n      </div>\n      <div className=\"x-small\">\n        {description ? (\n          <MDXRenderer>{description.childMdx.body}</MDXRenderer>\n        ) : null}\n      </div>\n\n      <DefaultValue {...defaultValue} />\n    </div>\n  </li>\n);\n\nProp.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.shape({}).isRequired,\n  required: PropTypes.bool,\n  defaultValue: PropTypes.shape({}), // eslint-disable-line react/forbid-prop-types\n  description: PropTypes.shape({\n    childMdx: PropTypes.shape({}), // eslint-disable-line react/forbid-prop-types\n  }),\n};\nProp.defaultProps = {\n  required: false,\n  defaultValue: {},\n  description: undefined,\n};\n\nconst PropsTable = ({ props: componentProps, displayName, content }) => (\n  <Card className=\"mb-5\" id={`props-api-table-${displayName}`}>\n    <Card.Header as=\"h3\" title={`${displayName} Props API`} className=\"pb-1\" />\n    {content && <div className=\"small mb-3\">{content}</div>}\n    {componentProps.length > 0 ? (\n      <ul className=\"list-unstyled\">\n        {componentProps.map(metadata => <Prop key={metadata.name} {...metadata} />)}\n      </ul>\n    ) : <div className=\"pb-3 pl-4\">This component does not receive any props.</div>}\n  </Card>\n);\n\nPropsTable.propTypes = {\n  props: PropTypes.arrayOf(PropTypes.shape({})),\n  content: PropTypes.string,\n  displayName: PropTypes.string,\n};\n\nPropsTable.defaultProps = {\n  props: [],\n  content: undefined,\n  displayName: undefined,\n};\n\nexport default PropsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { Container, Alert } from '~paragon-react'; // eslint-disable-line\nimport CodeBlock from '../components/CodeBlock';\nimport GenericPropsTable from '../components/PropsTable';\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\nimport LinkedHeading from '../components/LinkedHeading';\n\nexport default function PageTemplate({\n  data: { mdx, components: componentNodes },\n  pageContext: { cssVariables },\n}) {\n  const components = componentNodes.nodes.reduce((acc, currentValue) => {\n    acc[currentValue.displayName] = currentValue;\n    return acc;\n  }, {});\n\n  const shortcodes = React.useMemo(() => {\n    const PropsTable = ({ displayName, ...props }) => { // eslint-disable-line react/prop-types\n      if (components[displayName]) {\n        return <GenericPropsTable {...components[displayName]} {...props} />;\n      }\n      return null;\n    };\n    // Provide common components here\n    return {\n      h2: (props) => <LinkedHeading h=\"2\" {...props} />,\n      h3: (props) => <LinkedHeading h=\"3\" {...props} />,\n      h4: (props) => <LinkedHeading h=\"4\" {...props} />,\n      h5: (props) => <LinkedHeading h=\"5\" {...props} />,\n      h6: (props) => <LinkedHeading h=\"6\" {...props} />,\n      pre: props => <div {...props} />,\n      code: CodeBlock,\n      Link,\n      PropsTable,\n    };\n  }, [components]);\n\n  const cssVariablesTitle = 'Theme Variables (SCSS)';\n  const cssVariablesUrl = 'theme-variables-scss';\n\n  const getTocData = () => {\n    const tableOfContents = JSON.parse(JSON.stringify(mdx.tableOfContents));\n    if (cssVariables && !tableOfContents.items?.includes()) {\n      tableOfContents.items?.push({\n        title: cssVariablesTitle,\n        url: `#${cssVariablesUrl}`,\n      });\n    }\n    return tableOfContents;\n  };\n\n  const sortedComponentNames = mdx.frontmatter?.components || [];\n\n  const isDeprecated = mdx.frontmatter?.status?.toLowerCase().includes('deprecate') || false;\n\n  return (\n    <Layout isMdx tocData={getTocData()}>\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <SEO title={mdx.frontmatter.title} />\n      <Container size=\"md\" className=\"py-5\">\n        {isDeprecated && (\n          <Alert variant=\"warning\">\n            <Alert.Heading>This component will be removed soon.</Alert.Heading>\n            <p className=\"small mb-0\">{mdx.frontmatter.notes}</p>\n          </Alert>\n        )}\n        <h1 className=\"mb-4\">{mdx.frontmatter.title}</h1>\n        <MDXProvider components={shortcodes}>\n          <MDXRenderer>{mdx.body}</MDXRenderer>\n        </MDXProvider>\n        {cssVariables && (\n          <div className=\"mb-5\">\n            <h3 className=\"mb-4 pgn-doc__heading\" id={cssVariablesUrl}>\n              {cssVariablesTitle}\n              <a href={`#${cssVariablesUrl}`} aria-label=\"Jump to SCSS variables\">\n                <span className=\"pgn-doc__anchor\">#</span>\n              </a>\n            </h3>\n            <CodeBlock className=\"language-scss\">{cssVariables}</CodeBlock>\n          </div>\n        )}\n        {sortedComponentNames.map(componentName => {\n          const node = components[componentName];\n          if (!node) {\n            return null;\n          }\n          return <GenericPropsTable key={node.displayName} {...node} />;\n        })}\n      </Container>\n    </Layout>\n  );\n}\n\nPageTemplate.propTypes = {\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        status: PropTypes.string,\n      }),\n      body: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      tableOfContents: PropTypes.shape({\n        items: PropTypes.arrayOf(PropTypes.object),\n      }),\n    }),\n    components: PropTypes.shape({\n      nodes: PropTypes.arrayOf(PropTypes.shape({})),\n    }),\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    cssVariables: PropTypes.string,\n  }),\n};\n\nexport const pageQuery = graphql`\n  query ComponentPageQuery($id: String, $components: [String]) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n        status\n        notes\n        components\n      }\n      tableOfContents\n    }\n    components: allComponentMetadata(\n      filter: { displayName: { in: $components } }\n    ) {\n      nodes {\n        ...ComponentDocGenData\n      }\n    }\n  }\n\n  fragment ComponentDocGenData on ComponentMetadata {\n    displayName\n    props {\n      defaultValue {\n        value\n      }\n      name\n      type {\n        name\n        raw\n        value\n      }\n      required\n      docblock\n      doclets\n      description {\n        id\n        text\n        childMdx {\n          body\n        }\n      }\n    }\n  }\n`;\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","Object","toString","slice","constructor","name","test","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","key","fn","LinkedHeading","h","id","H","className","defaultProps","RequiredBadge","isRequired","Badge","variant","SimplePropType","PropTypeEnum","enumValue","value","map","join","JSON","stringify","PropTypeUnion","propType","PropType","reduce","prev","curr","PropTypeInstanceOf","PropTypeArrayOf","PropTypeObjectOf","PropTypeShape","entries","PropTypeExact","CustomPropType","raw","PROP_TYPE_COMPONENTS","array","bool","func","number","object","string","any","element","node","symbol","elementType","enum","union","instanceOf","arrayOf","objectOf","shape","exact","custom","required","PropTypeComponent","DefaultValue","undefined","Prop","type","defaultValue","description","childMdx","body","PropsTable","componentProps","displayName","content","Card","as","title","metadata","PageTemplate","data","componentNodes","components","cssVariables","pageContext","nodes","acc","currentValue","shortcodes","h2","h3","h4","h5","h6","pre","code","CodeBlock","Link","cssVariablesTitle","cssVariablesUrl","sortedComponentNames","frontmatter","isDeprecated","status","toLowerCase","includes","isMdx","tocData","tableOfContents","parse","items","url","getTocData","size","notes","MDXProvider","href","componentName"],"sourceRoot":""}