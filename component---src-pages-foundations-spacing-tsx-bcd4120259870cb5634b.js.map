{"version":3,"file":"component---src-pages-foundations-spacing-tsx-bcd4120259870cb5634b.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./node_modules/classnames/index.js","webpack://paragon-pattern-library-documentation/../src/Input/index.jsx","webpack://paragon-pattern-library-documentation/./src/components/MeasuredItem.tsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/spacing.tsx"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Input extends React.Component {\n  componentDidMount() {\n    if (process.env.NODE_ENV === 'development') {\n      this.checkHasLabel();\n    }\n  }\n\n  getHTMLTagForType() {\n    const { type } = this.props;\n    if (type === 'select' || type === 'textarea') { return type; }\n    return 'input';\n  }\n\n  getClassNameForType() {\n    switch (this.props.type) {\n      case 'file':\n        return 'form-control-file';\n      case 'checkbox':\n      case 'radio':\n        return 'form-check-input';\n      default:\n        return 'form-control';\n    }\n  }\n\n  setRef(forwardedRef) {\n    // In production just return the optional forwardedRef\n    if (process.env.NODE_ENV !== 'development') { return forwardedRef; }\n\n    return (element) => {\n      if (forwardedRef) { forwardedRef.current = element; } // eslint-disable-line no-param-reassign\n      this.inputEl = element;\n    };\n  }\n\n  checkHasLabel() {\n    if (this.inputEl.labels.length > 0) { return; }\n    if (this.inputEl.getAttribute('aria-label') !== null) { return; }\n    if (this.inputEl.getAttribute('aria-labelledby') !== null) { return; }\n\n    if (console) {\n      // eslint-disable-next-line no-console\n      console.warn('Input[a11y]: There is no associated label for this Input');\n    }\n  }\n\n  renderOptions(options) {\n    return options.map((option) => {\n      const {\n        value,\n        label,\n        group,\n        ...attributes\n      } = option;\n\n      if (group) {\n        return (\n          <optgroup key={`optgroup-${label}`} label={label} {...attributes}>\n            {this.renderOptions(group)}\n          </optgroup>\n        );\n      }\n      return (\n        <option key={value} value={value} {...attributes}>\n          {label}\n        </option>\n      );\n    }, this);\n  }\n\n  render() {\n    const {\n      type,\n      className,\n      options,\n      forwardedRef, // eslint-disable-line react/prop-types\n      ...attributes // eslint-disable-line react/prop-types\n    } = this.props;\n\n    const htmlTag = this.getHTMLTagForType();\n    const htmlProps = {\n      className: classNames(this.getClassNameForType(), className),\n      type: htmlTag === 'input' ? type : undefined,\n      ...attributes,\n      ref: this.setRef(forwardedRef),\n    };\n    const htmlChildren = type === 'select' ? this.renderOptions(options) : null;\n\n    return React.createElement(htmlTag, htmlProps, htmlChildren);\n  }\n}\n\nInput.propTypes = {\n  /** specifies the type of component.\n   * One of select, textarea, or any valid type for an html input tag. */\n  type: PropTypes.oneOf([\n    'textarea',\n    'select',\n    'checkbox',\n    'color',\n    'date',\n    'datetime',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n  ]).isRequired,\n  /** specifies the className in addition to a bootstrap class name. */\n  className: PropTypes.string,\n  /** should be used to specify the options of an Input of type select */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    disabled: PropTypes.bool,\n    group: PropTypes.arrayOf(PropTypes.shape({\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      disabled: PropTypes.bool,\n    })),\n  })),\n};\n\nInput.defaultProps = {\n  className: undefined,\n  options: [],\n};\n\n// eslint-disable-next-line react/no-multi-comp\nconst InputWithRefForwarding = React.forwardRef((props, ref) => (\n  <Input forwardedRef={ref} {...props} />\n));\n\nexport default InputWithRefForwarding;\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface IMeasuredItem {\n  properties: string[],\n  renderBefore?: Function,\n  renderAfter?: Function,\n  children: React.ReactNode,\n}\n\nconst initialMeasurements = {};\n\nconst MeasuredItem = ({\n  properties,\n  renderBefore,\n  renderAfter,\n  children,\n}: IMeasuredItem) => {\n  const { theme } = useContext(SettingsContext);\n  const [measurements, setMeasurements] = useState(initialMeasurements);\n  const itemRef = useRef();\n\n  useEffect(\n    () => {\n      const measure = () => {\n        if (!itemRef.current) {\n          return;\n        }\n        const computedStyle = getComputedStyle(itemRef.current);\n        const measurementsItems = properties.reduce((acc: { [x: string]: string; }, property: string) => {\n          acc[property] = computedStyle.getPropertyValue(property);\n          return acc;\n        }, {});\n        setMeasurements(measurementsItems);\n      };\n      // Needs a moment to finish switching theme and re-render children to DOM first.\n      setMeasurements(initialMeasurements);\n      const timeout = setTimeout(measure, 1000);\n      return () => clearTimeout(timeout);\n    },\n    [theme, properties],\n  );\n\n  return (\n    <>\n      {renderBefore ? renderBefore(measurements) : null}\n      {React.cloneElement(children as React.ReactElement, { ref: itemRef })}\n      {renderAfter ? renderAfter(measurements) : null}\n    </>\n  );\n};\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\nexport default MeasuredItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// @ts-ignore\nimport { Input, Container, DataTable } from '~paragon-react'; // eslint-disable-line\nimport SEO from '../../components/SEO';\nimport Layout from '../../components/PageLayout';\nimport MeasuredItem from '../../components/MeasuredItem';\n\nconst directions = [\n  { key: '', name: 'all' },\n  { key: 't', name: 'top' },\n  { key: 'r', name: 'right' },\n  { key: 'b', name: 'bottom' },\n  { key: 'l', name: 'left' },\n  { key: 'x', name: 'x direction' },\n  { key: 'y', name: 'y direction' },\n];\n\nconst spacerValues = [0, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6];\nconst sizes = [...spacerValues.slice(1).reverse(), ...spacerValues.map(value => -value)];\n\nconst getUtilityClassName = (\n  prefix: string,\n  direction: string,\n  size: number,\n) => `${prefix}${direction}-${size < 0 ? 'n' : ''}${Math.abs(size)}`;\n\nexport type PixelCellTypes = {\n  spacer: number,\n};\n\nconst PixelCell = ({ spacer }: PixelCellTypes) => (\n  <MeasuredItem\n    properties={['margin']}\n    renderAfter={(measurements: { margin: number }) => (\n      <code>\n        {measurements.margin}\n      </code>\n    )}\n  >\n    <div\n      style={{ display: 'none' }}\n      className={`m-${spacer}`}\n    />\n  </MeasuredItem>\n);\n\nPixelCell.propTypes = {\n  spacer: PropTypes.number.isRequired,\n};\n\nexport type SpaceBlockTypes = {\n  utilityClass: string,\n};\n\nconst SpaceBlock = ({ utilityClass }: SpaceBlockTypes) => (\n  <code\n    className={classNames(utilityClass)}\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '5rem',\n      textAlign: 'center',\n      width: '10rem',\n      background: 'rgba(0,0,0,.1)',\n    }}\n  >\n    {utilityClass ? `.${utilityClass}` : null}\n  </code>\n);\n\nSpaceBlock.propTypes = {\n  utilityClass: PropTypes.string,\n};\n\nSpaceBlock.defaultProps = {\n  utilityClass: '',\n};\n\nexport default function SpacingPage() {\n  const [size, setSize] = useState<number>(3);\n  const [direction, setDirection] = useState<string>('r');\n\n  const utilityClassName = getUtilityClassName('m', direction, size);\n\n  const spacerValuesTableData = spacerValues.map(value => ({\n    spacer: value,\n    pixelValue: <PixelCell spacer={value} />,\n  }));\n\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Spacing\" />\n        <h1>Spacing</h1>\n        <h2>Spacing according to pixels</h2>\n        <DataTable\n          className=\"pgn-doc__spacing-table\"\n          data={spacerValuesTableData}\n          columns={[\n            { Header: 'Spacer value', accessor: 'spacer' },\n            { Header: 'Pixel value', accessor: 'pixelValue' },\n          ]}\n        >\n          <DataTable.Table />\n        </DataTable>\n        <h3 className=\"mt-3\">Margin</h3>\n        <p>\n          Margin utilities are structured as{' '}\n          <code>{'.m{direction}-{level}'}</code>. Negative numbers are\n          represented as <code>n1</code>, <code>n2</code>, <code>n3</code>, etc.\n          Choose a direction and spacing level to change the margin applied to\n          the center block below.\n        </p>\n        <div className=\"border p-4\">\n          <div className=\"d-flex flex-column align-items-center\">\n            <h4>Direction</h4>\n            <div className=\"mb-2\">\n              {directions.map(({ key, name }) => (\n                <label\n                  className=\"form-check d-inline-block mr-4\"\n                  htmlFor={`set-direction-${key}`}\n                >\n                  <Input\n                    id={`set-direction-${key}`}\n                    key={key}\n                    className=\"mt-0\"\n                    type=\"radio\"\n                    name=\"direction\"\n                    value={key}\n                    checked={key === direction}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDirection(e.target.value)}\n                  />\n                  {name}\n                </label>\n              ))}\n            </div>\n            <label className=\"d-block\" htmlFor=\"set-size\">\n              <span className=\"d-block text-center\">Spacing Level: {size}</span>\n              <div\n                className=\"d-flex align-items-center\"\n                style={{ maxWidth: '20rem' }}\n              >\n                -6\n                <Input\n                  type=\"range\"\n                  id=\"set-size\"\n                  className=\"mx-2\"\n                  min={-6}\n                  step={0.5}\n                  max={6}\n                  value={size}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSize(parseInt(e.target.value, 10))}\n                />\n                6\n              </div>\n            </label>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n            <div className=\"border border-danger  p-0\" style={{}}>\n              <SpaceBlock utilityClass={utilityClassName} />\n            </div>\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n        </div>\n        <h3>Padding</h3>\n        <p>\n          Padding utilities are structured the same way:{' '}\n          <code>{'.p{direction}-{level}'}</code>.\n        </p>\n\n        <h3>All Spacing Utility Classes</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>All directions</th>\n              <th>Top</th>\n              <th>Right</th>\n              <th>Bottom</th>\n              <th>Left</th>\n              <th>X Direction</th>\n              <th>Y Direction</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th colSpan={7}>Margin</th>\n            </tr>\n            <tr>\n              {directions.map(({ key }) => (\n                <td>\n                  {sizes.map(_size => (\n                    <code className=\"d-block\">\n                      .{getUtilityClassName('m', key, _size)}\n                    </code>\n                  ))}\n                </td>\n              ))}\n            </tr>\n            <tr>\n              <th colSpan={7}>Padding</th>\n            </tr>\n            <tr>\n              {directions.map(({ key }) => (\n                <td>\n                  {sizes.map(_size => (\n                    <code className=\"d-block\">\n                      .{getUtilityClassName('p', key, _size)}\n                    </code>\n                  ))}\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  );\n}\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","Input","componentDidMount","process","getHTMLTagForType","type","this","props","getClassNameForType","setRef","forwardedRef","checkHasLabel","inputEl","labels","getAttribute","console","warn","renderOptions","options","map","option","value","label","group","attributes","render","className","htmlTag","htmlProps","undefined","ref","htmlChildren","React","defaultProps","InputWithRefForwarding","initialMeasurements","MeasuredItem","children","theme","useContext","setMeasurements","useState","itemRef","useRef","useEffect","timeout","setTimeout","computedStyle","getComputedStyle","measurementsItems","properties","acc","clearTimeout","renderBefore","renderAfter","directions","name","spacerValues","sizes","getUtilityClassName","prefix","direction","size","Math","PixelCell","spacer","measurements","style","display","SpaceBlock","utilityClass","alignItems","justifyContent","height","textAlign","width","background","SpacingPage","setSize","setDirection","utilityClassName","spacerValuesTableData","pixelValue","title","data","columns","Header","accessor","htmlFor","id","checked","onChange","e","maxWidth","min","step","max","parseInt","colSpan","_size"],"sourceRoot":""}